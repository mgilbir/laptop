#! /bin/bash

mkdir -p ~/Projects

if ! command -v brew >/dev/null; then
  echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby
fi

brew install ammonite-repl
brew install apktool
brew install autojump
brew install awscli
brew install bazaar
brew install boot2docker
brew install caddy
brew install ctags
brew install ffmpeg
brew install gdal
brew install gifsicle
brew install glide
brew install gnupg
brew install gnuplot
brew install gpac
brew install h2o
brew install htop
brew install imagemagick
brew install jq
brew install keybase
brew install libvo-aacenc
brew install mercurial
brew install mplayer
brew install neovim/neovim/neovim
brew install node
brew install protobuf
brew install python3
brew install redis
brew install rename
brew install sbt
brew install scala
brew install homebrew/fuse/sshfs
brew install sysdig
brew install terraform
brew install the_silver_searcher
brew install vim
brew install wget
brew install youtube-dl
brew install ccat
brew install Caskroom/versions/google-chrome-dev
brew install Caskroom/cask/atom
brew install Caskroom/cask/dropbox
brew install Caskroom/cask/1password
brew install Caskroom/cask/vlc
brew install Caskroom/cask/sketch
brew install Caskroom/cask/iterm2
brew install Caskroom/cask/alfred
brew install Caskroom/cask/intellij-idea
brew install Caskroom/cask/sourcetree
brew install Caskroom/cask/little-snitch
brew install Caskroom/cask/viscosity

if ! [ -d ~/.oh-my-zsh ]; then
  sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi

if ! [ -d ~/Projects/dotfiles ]; then
  git clone https://github.com/mgilbir/dotfiles ~/Projects/dotfiles
fi

(cd ~/Projects/dotfiles && git pull --rebase && make)

# Disable itunes launch with media keys
launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist

# Disable t.co links in Tweetbot
defaults write com.tapbots.TweetbotMac OpenURLsDirectly -bool true

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Trackpad: enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

# Trackpad: map bottom right corner to right-click
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

# Set language and text formats
# Note: if you’re in the US, replace `EUR` with `USD`, `Centimeters` with
# `Inches`, `en_GB` with `en_US`, and `true` with `false`.
defaults write NSGlobalDomain AppleLanguages -array "en" "es" "nl"
defaults write NSGlobalDomain AppleLocale -string "en_US@currency=EUR"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
defaults write NSGlobalDomain AppleMetricUnits -bool true

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Enable subpixel font rendering on non-Apple LCDs
defaults write NSGlobalDomain AppleFontSmoothing -int 2

# Enable HiDPI display modes (requires restart)
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

# Hide icons for hard drives, servers, and removable media on the desktop
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false

# Finder: show hidden files by default
defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Use list view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Dock
defaults write com.apple.dock showAppExposeGestureEnabled -int 1
defaults write com.apple.dock largesize -int 35
defaults write com.apple.dock tilesize -int 44
defaults write com.apple.dock magnification -int 1
defaults write com.apple.dock orientation -string right
defaults write com.apple.dock autohide -int 1
defaults write com.apple.dock wvous-bl-corner -int 7
defaults write com.apple.dock wvous-bl-modifier -int 0
defaults write com.apple.dock wvous-br-corner -int 4
defaults write com.apple.dock wvous-br-modifier -int 0
defaults write com.apple.dock wvous-tl-corner -int 10
defaults write com.apple.dock wvous-tl-modifier -int 0
defaults write com.apple.dock wvous-tr-corner -int 2
defaults write com.apple.dock wvous-tr-modifier -int 0
killall Dock

# Install golang
GOVERSION=1.6.2
if ! [ -e ~/Downloads/go$GOVERSION.darwin-amd64.pkg ]; then
  echo "Downloading go $GOVERSION"
  (cd ~/Downloads && curl -O https://storage.googleapis.com/golang/go$GOVERSION.darwin-amd64.pkg)
  #TODO: Do it without shelling out to the GUI
  open ~/Downloads/go$GOVERSION.darwin-amd64.pkg
fi

